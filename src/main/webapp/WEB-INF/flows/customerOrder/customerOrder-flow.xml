<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd">

    <var name="order" class="pl.pawelec.webshop.model.Order"/>
    <var name="customer" class="pl.pawelec.webshop.model.Customer"/>
    <var name="shippingAddress" class="pl.pawelec.webshop.model.ShippingAddress"/>
    <var name="shippingDetails" class="pl.pawelec.webshop.model.ShippingDetails"/>
    
    <action-state id="createOrder">
        <evaluate expression="cartServiceImpl.getOneById(requestParameters.cartId)" result="order.cart"/>
        <transition to="invalidCustomerOrderWarning" on-exception="pl.pawelec.webshop.exception.InvalidCustomerOrderException"/>
        <transition to="collectCustomerInfo"/>
    </action-state>
    
    <view-state id="collectCustomerInfo" model="customer">
        <on-render>
            <evaluate expression="orderServiceImpl.setFlowModelAttribute(flowRequestContext)"/>
        </on-render>
        <transition on="keepGoing" to="collectShippingDetails">
            <evaluate expression="orderServiceImpl.fillInCustomerAndShippingAddressInOrder(order, customer)"/>
            <evaluate expression="appParameterServiceImpl.getBySymbol('payment_method')" result="flowScope.paymentMethod"/>
            <evaluate expression="appParameterServiceImpl.getBySymbol('delivery_method')" result="flowScope.deliveryMethod"/>
        </transition>
    </view-state>
    
    <view-state id="collectShippingDetails" model="shippingDetails">
        <on-render>
            <evaluate expression="orderServiceImpl.setFlowModelAttribute(flowRequestContext)"/>
        </on-render>
        <transition on="backToCollectCustomerInfo" to="collectCustomerInfo" validate="false"/>
        <transition on="goToOrderConfirmation" to="orderConfirmation">
            <evaluate expression="orderServiceImpl.fillInShippingDetailsInOrder(order, shippingDetails)"/>
        </transition>
    </view-state>
    
    <view-state id="orderConfirmation" model="shippingAddress" >
        <on-render>
            <evaluate expression="orderServiceImpl.setFlowModelAttribute(flowRequestContext)"/>
        </on-render>
        <transition on="backToCollectShippingDetails" to="collectShippingDetails" validate="false"/>
        <transition on="changeAddress" to="orderConfirmation">
            <evaluate expression="orderServiceImpl.fillInShippingAddressInOrder(order, shippingAddress)"/>
        </transition>
        <transition on="orderConfirmed" to="saveCustomerOrder" validate="false"/>
    </view-state>
    
    <action-state id="saveCustomerOrder">
        <evaluate expression="orderServiceImpl.saveCustomerOrder(order)" result="order"/>
        <transition to="thankCustomer"/>
    </action-state>
    
    <view-state id="thankCustomer" model="order">
        <on-render>
            <evaluate expression="orderServiceImpl.setFlowModelAttribute(flowRequestContext)"/>
        </on-render>
        <transition to="endState"/>
    </view-state>
    
    <view-state id="invalidCustomerOrderWarning">
        <on-render>
            <evaluate expression="orderServiceImpl.setFlowModelAttribute(flowRequestContext)"/>
        </on-render>
        <transition to="endState" />
    </view-state>
    
    <end-state id="endState"/>
    
    <end-state id="cancelCustomerOrder" view = "customerOrderCancelled.jsp"/>
    
    <global-transitions>
        <transition on = "cancel" to="cancelCustomerOrder" validate="false"/>
    </global-transitions>
</flow>
